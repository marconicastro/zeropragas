// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Tabela para User Data Unificado - Sistema Enterprise
model LeadUserData {
  id              String   @id @default(cuid())
  email           String   @unique
  phone           String?
  firstName       String?
  lastName        String?
  fullName        String?
  city            String?
  state           String?
  zipcode         String?
  country         String?
  
  // Metadados de captura
  captureSource   String   @default("website") // website, facebook, google
  capturePage     String?  // URL da página de captura
  utmSource       String?
  utmMedium       String?
  utmCampaign     String?
  ipAddress       String?
  userAgent       String?
  
  // Controle de validação
  validated       Boolean  @default(false)
  validationDate  DateTime?
  
  // Relacionamento com eventos
  caktoEvents     CaktoEvent[]
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// Tabela para registrar eventos Cakto recebidos
model CaktoEvent {
  id              String   @id @default(cuid())
  eventId         String   @unique
  eventType       String   // purchase_approved, checkout_abandonment, etc.
  transactionId   String?
  amount          Float?
  productId       String?
  productName     String?
  paymentMethod   String?
  status          String?
  
  // Dados recebidos da Cakto
  caktoEmail      String?
  caktoPhone      String?
  caktoName       String?
  
  // Dados usados na Meta (após validação)
  usedEmail       String?
  usedPhone       String?
  usedName        String?
  usedCity        String?
  usedState       String?
  usedZipcode     String?
  usedCountry     String?
  
  // Controle de processamento
  leadDataId      String?
  lead            LeadUserData? @relation(fields: [leadDataId], references: [id])
  processingTime  Int?     // ms
  metaSuccess     Boolean  @default(false)
  metaResponse    String?  // JSON da resposta
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// Tabela para sessões de checkout
model CheckoutSession {
  id                    String   @id @default(cuid())
  sessionId             String   @unique
  status                String   @default("pending") // pending, completed, expired
  
  // InitiateCheckout data
  initiateEventId       String
  initiateEventTime     Int
  initiateValue         Float?
  initiateCurrency      String?
  initiateContentIds    String?  // JSON array
  initiateContentType   String?
  initiateContentName   String?
  initiateContentCategory String?
  initiateUserData      String?  // JSON object
  initiateCustomData    String?  // JSON object
  initiateClientInfo    String?  // JSON object
  initiateUTMData       String?  // JSON object
  initiatePerformanceData String? // JSON object
  
  // Purchase data (preenchido quando completado)
  purchaseEventId       String?
  purchaseEventTime     Int?
  purchaseTransactionId String?
  purchasePaymentMethod String?
  purchaseCustomData    String?  // JSON object
  
  // Unified data (resultado final)
  unifiedEventData      String?  // JSON object completo
  
  // Controle
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  expiresAt             DateTime
  
  // Relacionamentos
  unifiedEvents         UnifiedEvent[]
  
  @@index([sessionId])
  @@index([initiateEventId])
  @@index([purchaseEventId])
  @@index([status])
}

// Tabela para eventos unificados
model UnifiedEvent {
  id                    String   @id @default(cuid())
  eventId               String   @unique
  eventName             String
  eventType             String   // InitiateCheckout, Purchase
  sessionId             String?
  checkoutSession       CheckoutSession? @relation(fields: [sessionId], references: [sessionId])
  
  // Event data
  eventTime             Int
  value                 Float?
  currency              String?
  contentIds            String?  // JSON array
  contentType           String?
  contentName           String?
  contentCategory       String?
  transactionId         String?
  paymentMethod         String?
  numItems              Int?
  
  // User data
  userData              String?  // JSON object
  
  // Custom data
  customData            String?  // JSON object
  
  // Client and device info
  deviceType            String?
  screenWidth           Int?
  screenHeight          Int?
  viewportWidth         Int?
  viewportHeight        Int?
  pixelRatio            Float?
  browser               String?
  operatingSystem       String?
  language              String?
  timezone              String?
  connectionType        String?
  
  // Performance data
  pageLoadTime          Int?
  domContentLoaded      Int?
  firstContentfulPaint  Int?
  sessionStartTime      Int?
  pageNumber            Int?
  userJourneyStage      String?
  
  // Marketing data
  campaignName          String?
  campaignId            String?
  adsetName             String?
  adsetId               String?
  adName                String?
  adId                  String?
  placement             String?
  campaignType          String?
  adFormat              String?
  targetingType         String?
  audienceSegment       String?
  creativeType          String?
  objectiveType         String?
  
  // Product and market data
  contentLanguage       String?
  market                String?
  platform              String?
  eventSourceUrl        String?
  actionSource          String?
  
  // Processing info
  processingTime        Int?     // ms
  metaSuccess           Boolean  @default(false)
  metaResponse          String?  // JSON response
  metaEventId           String?  // Meta event ID
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  @@index([eventId])
  @@index([eventName])
  @@index([eventType])
  @@index([sessionId])
  @@index([transactionId])
  @@index([metaSuccess])
}