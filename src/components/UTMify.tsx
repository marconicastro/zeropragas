'use client'

import { useEffect } from 'react'

export default function UTMify() {
  useEffect(() => {
    if (typeof window !== 'undefined') {
      // Verificar se o script j√° foi carregado
      const existingScript = document.querySelector('script[src*="utmify.com.br"]')
      if (existingScript) {
        console.log('üîç UTMify script j√° existe no DOM')
        return
      }

      // Criar e adicionar o script
      const script = document.createElement('script')
      script.src = 'https://cdn.utmify.com.br/utms.js'
      script.setAttribute('data-utmify-prevent-xcod-sck', '')
      script.setAttribute('data-utmify-prevent-subids', '')
      script.async = true
      script.defer = true
      
      // Adicionar tratamento de erro
      script.onerror = () => {
        console.error('‚ùå Erro ao carregar o script UTMify')
        console.log('üîç Verificando se o URL est√° correto...')
        
        // Tentar URL alternativo
        const fallbackScript = document.createElement('script')
        fallbackScript.src = 'https://cdn.utmify.com.br/scripts/utms/latest.js'
        fallbackScript.setAttribute('data-utmify-prevent-xcod-sck', '')
        fallbackScript.setAttribute('data-utmify-prevent-subids', '')
        fallbackScript.async = true
        fallbackScript.defer = true
        
        fallbackScript.onerror = () => {
          console.error('‚ùå Falha ao carregar ambos os URLs do UTMify')
          console.log('üîß Poss√≠veis solu√ß√µes:')
          console.log('   1. Verifique sua conex√£o com a internet')
          console.log('   2. Verifique se o servi√ßo UTMify est√° online')
          console.log('   3. Verifique se n√£o h√° bloqueadores de script')
        }
        
        fallbackScript.onload = () => {
          console.log('‚úÖ UTMify carregado com URL alternativo')
        }
        
        document.head.appendChild(fallbackScript)
      }
      
      script.onload = () => {
        console.log('‚úÖ UTMify carregado com sucesso')
        
        // Verificar se as fun√ß√µes UTMify est√£o dispon√≠veis
        setTimeout(() => {
          if (typeof (window as any).utmify !== 'undefined') {
            console.log('‚úÖ Fun√ß√µes UTMify est√£o dispon√≠veis')
          } else {
            console.warn('‚ö†Ô∏è Script UTMify carregado mas fun√ß√µes n√£o encontradas')
          }
        }, 1000)
      }
      
      document.head.appendChild(script)
    }
  }, [])

  return null
}